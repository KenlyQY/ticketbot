from aiogram import Bot, Dispatcher, types
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import ReplyKeyboardBuilder

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
TOKEN = "7275576099:AAEJhsE-INV2flo4yHEJYh98nfT8-PvPEIs"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# URL –≤–∞—à–µ–≥–æ Web App (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
WEBAPP_URL = "https://test-bot.githun.io"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def start(message: types.Message):
    builder = ReplyKeyboardBuilder()
    builder.add(
        types.KeyboardButton(
            text="üì® –û—Ç–∫—Ä—ã—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É",
            web_app=types.WebAppInfo(url=WEBAPP_URL)
    ))
    await message.answer(
        "üõ† <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç:",
        reply_markup=builder.as_markup(resize_keyboard=True)
    )

if __name__ == '__main__':
    import asyncio
    asyncio.run(dp.start_polling(bot))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
@dp.message_handler(content_types=['web_app_data'])
async def handle_web_app(message: types.Message):
    data = json.loads(message.web_app_data.data)
    if data['action'] == 'create_ticket':
        await message.answer(f"–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}:\n{data['text']}")

@dp.message_handler(content_types=['web_app_data'])
async def handle_webapp_data(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)
        ticket_text = data.get('text', '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞')
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–∏–∫–µ—Ç –≤ –ë–î
        await message.answer(f"‚úÖ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω!\n–¢–µ–∫—Å—Ç: {ticket_text}")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É (–∑–∞–º–µ–Ω–∏—Ç–µ ID –Ω–∞ –≤–∞—à)
        admin_id = 937491209
        await bot.send_message(
            admin_id,
            f"üö® –ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç –æ—Ç @{message.from_user.username}:\n{ticket_text}"
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)